name: Deploy Ursalang web site with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  TEST_PORT: 8000

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all commits for setting page timestamps
          submodules: recursive
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install DarkGlass dependencies
        run: |
          sudo apt-get -y install xdg-utils discount libcgi-pm-perl libfile-slurp-perl libfile-mimeinfo-perl libimage-exiftool-perl libdatetime-perl libdate-calc-perl libhtml-parser-perl libhtml-tiny-perl libxml-libxslt-perl libpdf-api2-perl libperl6-slurp-perl libxml-atom-perl libmodule-path-perl python3-xdg python3-pip imagemagick
          sudo pip install hulot
          sudo chmod 755 /usr/local/bin
      - name: Install our dependencies
        run: |
          git clone https://github.com/ursalang/ursa-gtksourceview
          xdg-mime install ursa-gtksourceview/ursalang-ursa.xml
          sudo pip install pygments-lexer-ursa
          sudo apt-get -y install rsync linkchecker
          npm install
      - name: Build pages
        run: |
          /usr/share/rsync/scripts/git-set-file-times pages
          npm run build
      - name: Check links
        run: |
          node ./cgi-bin/server.js $TEST_PORT & linkchecker http://localhost:$TEST_PORT
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
