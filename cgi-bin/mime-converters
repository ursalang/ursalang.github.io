#!/usr/bin/env python3
#
# Â© Reuben Thomas <rrt@sc3d.org> 2023
# Released under the GPL version 3, or (at your option) any later version.

from __future__ import annotations

import sys
import argparse
import warnings
from warnings import warn
from typing import (
    Optional,
    Union,
    Type,
    NoReturn,
    TextIO,
)

from mime_convert import converters

# Command-line arguments
parser = argparse.ArgumentParser(
    description="List MIME converters.",
    formatter_class=argparse.RawDescriptionHelpFormatter,
)
parser.add_argument(
    "-V",
    "--version",
    action="version",
    version="%(prog)s 0.1 (c) 2023 Reuben Thomas <rrt@sc3d.org>",
)
parser.add_argument("--match", metavar="REGEX", help="regex to match against")
args = parser.parse_args()


# Error messages
def simple_warning(  # pylint: disable=too-many-arguments
    message: Union[Warning, str],
    category: Type[Warning],  # pylint: disable=unused-argument
    filename: str,  # pylint: disable=unused-argument
    lineno: int,  # pylint: disable=unused-argument
    file: Optional[TextIO] = sys.stderr,  # pylint: disable=redefined-outer-name
    line: Optional[str] = None,  # pylint: disable=unused-argument
) -> None:
    print(f"{parser.prog}: {message}", file=file or sys.stderr)


warnings.showwarning = simple_warning


def die(code: int, msg: str) -> NoReturn:
    warn(msg)
    sys.exit(code)


if args.match is None:
    match = ".*"
else:
    match = args.match
print("\n".join(converters(match)))
